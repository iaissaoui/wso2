<?xml version="1.0" encoding="UTF-8"?>
<api context="/api" name="api" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" url-mapping="/hello">
        <inSequence>
            <log description="Start" level="custom" separator=" ### ">
                <property name="Started Service on GET" value="/hello"/>
            </log>
            <log description="Full" level="full" separator=" ### "/>
            <log description="End" level="custom" separator=" ### ">
                <property name="Ended Service" value="/hello"/>
            </log>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" url-mapping="/hello">
        <inSequence>
            <log description="Start" level="custom" separator="@@@">
                <property name="Started Service on POST" value="/hello"/>
            </log>
            <log description="Full" level="full"/>
            <log description="in-logs" level="custom">
                <property expression="json-eval($)" name="in-sequence"/>
            </log>
            <loopback/>
        </inSequence>
        <outSequence>
            <property expression="json-eval($.name)" name="name" scope="default" type="STRING"/>
            <log level="custom">
                <property expression="get-property('name')" name="prop 1"/>
            </log>
            <property expression="fn:concat('{&quot;message&quot; : &quot;Hello ' , get-property('name'), '!&quot;}' )" name="message" scope="default" type="STRING"/>
            <log level="custom">
                <property expression="get-property('message')" name="prop 2"/>
            </log>
            <enrich>
                <source clone="true" type="inline">
					{&#xd;
					"dummy": "dummy"&#xd;
					}
				</source>
                <target action="child" xpath="json-eval($)"/>
            </enrich>
            <enrich description="">
                <source clone="true" property="message" type="property"/>
                <target action="child" xpath="json-eval($)"/>
            </enrich>
            <!-- <log description="out-logs" level="custom"> -->
            <!-- <property expression="json-eval($)" name="out-sequence"/> -->
            <!-- </log> -->
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" url-mapping="/helloxml">
        <inSequence>
            <log level="full">
                <property name="At" value="In-Sequence"/>
            </log>
            <loopback/>
        </inSequence>
        <outSequence>
            <datamapper config="gov:datamapper/json-to-xml.dmc" inputSchema="gov:datamapper/json-to-xml_inputSchema.json" inputType="JSON" outputSchema="gov:datamapper/json-to-xml_outputSchema.json" outputType="XML" xsltStyleSheet="gov:datamapper/json-to-xml_xsltStyleSheet.xml"/>
            <log level="full"/>
            <respond/>
        </outSequence>
        <faultSequence>
            <log level="full">
                <property name="At" value="Fault"/>
            </log>
        </faultSequence>
    </resource>
    <resource methods="POST" url-mapping="/stocks">
        <inSequence>
            <log>
                <property name="IN 1" value="TRUE"/>
            </log>
            <validate cache-schema="true" source="json-eval($)">
                <schema key="conf:myresources/json-validator-iqbal.json"/>
                <on-fail>
                    <payloadFactory media-type="json">
                        <format>
							{"Error":"$1"}
						</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:ERROR_MESSAGE"/>
                        </args>
                    </payloadFactory>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="500"/>
                    <respond/>
                </on-fail>
            </validate>
            <log>
                <property name="IN 2" value="TRUE"/>
            </log>
            <!--       


            <filter xpath="json-eval($)">
                <then/>
                <else/>
            </filter>
            <log>
                <property name="IN 3" value="TRUE"/>
            </log>
            <switch source="json-eval($)">
                <case regex="Apple"/>
                <case regex="Microsoft"/>
                <default/>
            </switch>
            <log>
                <property name="IN 4" value="TRUE"/>
            </log>
            <send>
                <endpoint key="StocksQuotes"/>
            </send>
       


-->
            <loopback/>
        </inSequence>
        <outSequence>
            <log>
                <property name="IN OUT SEQUENCE" value="TRUE"/>
            </log>
            <respond/>
        </outSequence>
        <faultSequence>
            <log level="full">
                <property name="IN FAULT" value="TRUE"/>
            </log>
            <respond/>
        </faultSequence>
    </resource>
</api>
